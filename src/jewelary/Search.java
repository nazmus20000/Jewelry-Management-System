/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package jewelary;

import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.net.URL;
import java.sql.ResultSet;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

import net.proteanit.sql.DbUtils;

/**
 *
 * @author sakib
 */
public class Search extends javax.swing.JFrame {

    /**
     * Creates new form other
     */
    public Search() {
        this.setResizable(true);
        initComponents();
        searchjTable.setEnabled(true);
        this.getRootPane().setDefaultButton(SearchButton);
        setLocationRelativeTo(null);
        eighteenKarattext.setEditable(false);		// -mm
        eighteenKarattext.setHorizontalAlignment(JTextField.CENTER);	// -mm
        eighteenKarattext.setBackground(Color.LIGHT_GRAY);
        twentyoneKarattext.setEditable(false);		// -mm
        twentyoneKarattext.setHorizontalAlignment(JTextField.CENTER);	// -mm
        twentyoneKarattext.setBackground(Color.LIGHT_GRAY);
        twentytwoKarattext.setEditable(false);		// -mm
        twentytwoKarattext.setHorizontalAlignment(JTextField.CENTER);	// -mm
        twentytwoKarattext.setBackground(Color.LIGHT_GRAY);
        setTitle("Search");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        try {
    		URL iconurl = getClass().getResource("res/Icon_Main.png");
    		ImageIcon icon = new ImageIcon(iconurl);
    		this.setIconImage(icon.getImage());
		} catch (Exception e) {
		}
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        seachcatagoryjComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        eighteenKarattext = new javax.swing.JTextField();
        eighteenKaratlabel = new javax.swing.JLabel();
        twentytwoKarattext = new javax.swing.JTextField();
        twentytwoKaratlabel = new javax.swing.JLabel();
        twentyoneKarattext = new javax.swing.JTextField();
        twentyoneKaratlabel = new javax.swing.JLabel();
        
        searchjTable = new javax.swing.JTable() {

        	public Component prepareRenderer(TableCellRenderer renderer, int row, int column)
    		{
        		String type=null;
				Component c = super.prepareRenderer(renderer, row, column);

				//  Color row based on a cell value

				if (!isRowSelected(row))
				{
					c.setBackground(getBackground());
					int modelRow = convertRowIndexToModel(row);
					try {
						 type = (String)getModel().getValueAt(modelRow, 2);
					} catch (Exception e) {
						// TODO: handle exception
					}
					if ("SOLD".equals(type)) c.setBackground(Color.RED);
					if ("BOOKED/NO DELIVERY".equals(type)) c.setBackground(Color.YELLOW);
				}

				return c;
			}
    	};
        
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 36)); // NOI18N
        jLabel1.setText("Search");

        searchTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        SearchButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SearchButton.setText("Search");
        SearchButton.setPreferredSize(new java.awt.Dimension(100, 23));
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });
       
        SearchButton.addKeyListener(new KeyListener() {
			
			@Override
			public void keyTyped(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void keyReleased(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void keyPressed(KeyEvent e) {
				// TODO Auto-generated method stub
				if(e.getKeyCode()==KeyEvent.VK_ENTER)
					SearchButtonKeyPerformed(e);
			}
		});
        
        File f=new File("src/jewelary/res/Search_Icon.png");
		try{
		Image image=ImageIO.read(f);
		ImageIcon i=new ImageIcon(image);
		SearchButton.setIcon(i);
		}
		catch(Exception e){
			
		}
        
        seachcatagoryjComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        seachcatagoryjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Product Name", "Customer ID", "Date", "Transaction ID", "Customer Name" }));
        seachcatagoryjComboBox.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Search By:");

        searchjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(searchjTable);

        eighteenKarattext.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        eighteenKaratlabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        eighteenKaratlabel.setText("18 Karat:");

        twentytwoKarattext.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        twentytwoKaratlabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        twentytwoKaratlabel.setText("22 Karat:");

        twentyoneKarattext.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        twentyoneKaratlabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        twentyoneKaratlabel.setText("21 Karat:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(491, 491, 491)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(twentytwoKaratlabel)
                        .addGap(18, 18, 18)
                        .addComponent(twentytwoKarattext, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(eighteenKaratlabel)
                            .addGap(18, 18, 18)
                            .addComponent(eighteenKarattext, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(twentyoneKaratlabel)
                            .addGap(18, 18, 18)
                            .addComponent(twentyoneKarattext, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(seachcatagoryjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1046, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eighteenKarattext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eighteenKaratlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(twentyoneKarattext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(twentyoneKaratlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(twentytwoKarattext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(twentytwoKaratlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seachcatagoryjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 27;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 41, 0);
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>                        

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    	String select=seachcatagoryjComboBox.getSelectedItem().toString();
    	if(select.matches("Product Name")){
    		DBManager db=new DBManager();
    		ResultSet rs=db.searchWithPnameDB(this.searchTextField.getText());
    		try{
    			if(db.flag6==1){
    				this.searchjTable.setModel(DbUtils.resultSetToTableModel(rs));
    				((DefaultTableCellRenderer)searchjTable.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        			DefaultTableCellRenderer ren = new DefaultTableCellRenderer();
        			
        			// -tesded for coloring row
//        			int rowno = searchjTable.getRowCount();
//        			for(int i=0; i<rowno; i++) {
//        				String val = searchjTable.getModel().getValueAt(i, 2).toString();
//        				if(val.equals("AVAILABLE")) {
//        					
//        				}
//        				else if(val.equals("SOLD")) {
//        					
//        				}
//        				else if(val.equals("BOOKED/NO DELIVERY")) {
//        					
//        				}
//        			}
        			// -end tesded for coloring row
        			
        			ren.setHorizontalAlignment(SwingConstants.CENTER);
        			int colno = searchjTable.getColumnCount();
        			for(int i=0; i<colno; i++) {
        				searchjTable.getColumnModel().getColumn(i).setCellRenderer(ren);
        			}
        			
    				db.st.close();
    				db.conn.close();
    			}
    			else {
    				this.searchjTable.setModel(new DefaultTableModel());
    			}
    		}
    		catch(Exception e){
    			
    		}
    	}
    	else if(select.matches("Customer ID")){
    		DBManager db=new DBManager();
        	ResultSet rs=db.searchWithCidMobDB(searchTextField.getText());
        	try {
    			if(db.flag4==1) {
    				searchjTable.setModel(DbUtils.resultSetToTableModel(rs)); 
    				((DefaultTableCellRenderer)searchjTable.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        			DefaultTableCellRenderer ren = new DefaultTableCellRenderer();
        			ren.setHorizontalAlignment(SwingConstants.CENTER);
        			int colno = searchjTable.getColumnCount();
        			for(int i=0; i<colno; i++) {
        				searchjTable.getColumnModel().getColumn(i).setCellRenderer(ren);
        			}
    			}
    			else {
    				this.searchjTable.setModel(new DefaultTableModel());
    			}
    			db.st.close();
    			db.conn.close();
    		} catch (Exception e) {
    			// TODO Auto-generated catch block
    			//e.printStackTrace();
    		}
    	}
    	else if(select.matches("Date")){
    		String S=searchTextField.getText();
    		for(int i=0;i<S.length();i++){
    			if(S.charAt(i)=='.'||S.charAt(i)=='-')S=S.substring(0,i)+'/'+S.substring(i+1);
    		}
    		DBManager db=new DBManager();
        	ResultSet rs=db.searchWithDateDB(S);
        	try {
    			if(db.flag3==1) {
    				searchjTable.setModel(DbUtils.resultSetToTableModel(rs)); 
    				((DefaultTableCellRenderer)searchjTable.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        			DefaultTableCellRenderer ren = new DefaultTableCellRenderer();
        			ren.setHorizontalAlignment(SwingConstants.CENTER);
        			int colno = searchjTable.getColumnCount();
        			for(int i=0; i<colno; i++) {
        				searchjTable.getColumnModel().getColumn(i).setCellRenderer(ren);
        			}
    			}

    			else {
    				this.searchjTable.setModel(new DefaultTableModel());
    			}
    			db.st.close();
    			db.conn.close();
    		} catch (Exception e) {
    			// TODO Auto-generated catch block
    			//e.printStackTrace();
    		}
    	}
    	else if(select.matches("Transaction ID")){
    		DBManager db=new DBManager();
    		ResultSet rs=db.searchWithTidDB(searchTextField.getText());
    		try{
    			if(db.flag5==1){
    				this.searchjTable.setModel(DbUtils.resultSetToTableModel(rs));
    				((DefaultTableCellRenderer)searchjTable.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        			DefaultTableCellRenderer ren = new DefaultTableCellRenderer();
        			ren.setHorizontalAlignment(SwingConstants.CENTER);
        			int colno = searchjTable.getColumnCount();
        			for(int i=0; i<colno; i++) {
        				searchjTable.getColumnModel().getColumn(i).setCellRenderer(ren);
        			}
    				db.st.close();
    				db.conn.close();
    			}
    			else {
    				this.searchjTable.setModel(new DefaultTableModel());
    			}
    		}
    		catch(Exception e){
    		}
    	}
    	else if(select.matches("Customer Name")){
    		DBManager db=new DBManager();
        	ResultSet rs=db.searchWithCnameDB(searchTextField.getText());
        	try {
    			if(db.flag8==1) {
    				searchjTable.setModel(DbUtils.resultSetToTableModel(rs)); 
    				((DefaultTableCellRenderer)searchjTable.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        			DefaultTableCellRenderer ren = new DefaultTableCellRenderer();
        			ren.setHorizontalAlignment(SwingConstants.CENTER);
        			int colno = searchjTable.getColumnCount();
        			for(int i=0; i<colno; i++) {
        				searchjTable.getColumnModel().getColumn(i).setCellRenderer(ren);
        			}
    			}

    			else {
    				this.searchjTable.setModel(new DefaultTableModel());
    			}
    			db.st.close();
    			db.conn.close();
    		} catch (Exception e) {
    			//e.printStackTrace();
    		}
    	}
    }                                                                           
    
    private void SearchButtonKeyPerformed(KeyEvent kevt) {                                             
        // TODO add your handling code here:
    	String select=seachcatagoryjComboBox.getSelectedItem().toString();
    	if(select.matches("Product Name")){
    		DBManager db=new DBManager();
    		ResultSet rs=db.searchWithPnameDB(this.searchTextField.getText());
    		try{
    			if(db.flag6==1){
    				this.searchjTable.setModel(DbUtils.resultSetToTableModel(rs));
    				db.st.close();
    				db.conn.close();
    			}
    		}
    		catch(Exception e){
    			
    		}
    	}
    	else if(select.matches("Customer ID")){
    		DBManager db=new DBManager();
        	ResultSet rs=db.searchWithCidMobDB(searchTextField.getText());
        	try {
    			if(db.flag4==1)searchjTable.setModel(DbUtils.resultSetToTableModel(rs)); 
    			db.st.close();
    			db.conn.close();
    		} catch (Exception e) {
    			// TODO Auto-generated catch block
    			//e.printStackTrace();
    		}
    	}
    	else if(select.matches("Date")){
    		String S=searchTextField.getText();
    		for(int i=0;i<S.length();i++){
    			if(S.charAt(i)=='.'||S.charAt(i)=='-')S=S.substring(0,i)+'/'+S.substring(i+1);
    		}
    		DBManager db=new DBManager();
        	ResultSet rs=db.searchWithDateDB(S);
        	try {
    			if(db.flag3==1)searchjTable.setModel(DbUtils.resultSetToTableModel(rs)); 
    			db.st.close();
    			db.conn.close();
    		} catch (Exception e) {
    			// TODO Auto-generated catch block
    			//e.printStackTrace();
    		}
    	}
    	else if(select.matches("Transaction ID")){
    		DBManager db=new DBManager();
    		ResultSet rs=db.searchWithTidDB(searchTextField.getText());
    		try{
    			if(db.flag5==1){
    				this.searchjTable.setModel(DbUtils.resultSetToTableModel(rs));
    				db.st.close();
    				db.conn.close();
    			}
    		}
    		catch(Exception e){
    		}
    	}
    	else if(select.matches("Customer Name")){
    		DBManager db=new DBManager();
        	ResultSet rs=db.searchWithCnameDB(searchTextField.getText());
        	try {
    			if(db.flag8==1)searchjTable.setModel(DbUtils.resultSetToTableModel(rs)); 
    			db.st.close();
    			db.conn.close();
    		} catch (Exception e) {
    			//e.printStackTrace();
    		}
    	}
    }                                            

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton SearchButton;
    private javax.swing.JLabel eighteenKaratlabel;
    private javax.swing.JTextField eighteenKarattext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox seachcatagoryjComboBox;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JTable searchjTable;
    private javax.swing.JLabel twentyoneKaratlabel;
    private javax.swing.JTextField twentyoneKarattext;
    private javax.swing.JLabel twentytwoKaratlabel;
    private javax.swing.JTextField twentytwoKarattext;
    // End of variables declaration                   
}
